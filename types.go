// Code generated by `generate`. DO NOT EDIT.

package kittycad

// AuthSession is the type definition for a AuthSession.
type AuthSession struct {
	// CreatedAt is the date and time the session/request was created.
	CreatedAt *JSONTime `json:"created_at,omitempty" yaml:"created_at,omitempty"`
	// Email is the user's email address.
	Email string `json:"email,omitempty" yaml:"email,omitempty"`
	// ID is the id of the session.
	ID string `json:"id,omitempty" yaml:"id,omitempty"`
	// IPAddress is the IP address the request originated from.
	IPAddress string `json:"ip_address,omitempty" yaml:"ip_address,omitempty"`
	// IsValid is if the token is valid.
	IsValid bool `json:"is_valid,omitempty" yaml:"is_valid,omitempty"`
	// Token is the user's token.
	Token string `json:"token,omitempty" yaml:"token,omitempty"`
	// UserID is the user's id.
	UserID string `json:"user_id,omitempty" yaml:"user_id,omitempty"`
}

// Environment is the type of environment.
type Environment string

const (
	// EnvironmentDEVELOPMENT represents the Environment `"DEVELOPMENT"`.
	EnvironmentDEVELOPMENT Environment = "DEVELOPMENT"
	// EnvironmentPREVIEW represents the Environment `"PREVIEW"`.
	EnvironmentPREVIEW Environment = "PREVIEW"
	// EnvironmentPRODUCTION represents the Environment `"PRODUCTION"`.
	EnvironmentPRODUCTION Environment = "PRODUCTION"
)

// ErrorMessage is the type definition for a ErrorMessage.
type ErrorMessage struct {
	// Message is the message.
	Message string `json:"message,omitempty" yaml:"message,omitempty"`
}

// FileConversion is the type definition for a FileConversion.
type FileConversion struct {
	// CompletedAt is the date and time the file conversion was completed.
	CompletedAt *JSONTime `json:"completed_at,omitempty" yaml:"completed_at,omitempty"`
	// CreatedAt is the date and time the file conversion was created.
	CreatedAt *JSONTime `json:"created_at,omitempty" yaml:"created_at,omitempty"`
	// ID is the id of the file conversion.
	ID string `json:"id,omitempty" yaml:"id,omitempty"`
	// Output is the converted file, base64 encoded.
	Output       string              `json:"output,omitempty" yaml:"output,omitempty"`
	OutputFormat ValidOutputFileType `json:"output_format,omitempty" yaml:"output_format,omitempty"`
	SrcFormat    ValidSourceFileType `json:"src_format,omitempty" yaml:"src_format,omitempty"`
	// Status is the status of the file conversion.
	Status FileConversionStatus `json:"status,omitempty" yaml:"status,omitempty"`
}

// FileConversionStatus is the status of the file conversion.
type FileConversionStatus string

const (
	// FileConversionStatusQueued represents the FileConversionStatus `"Queued"`.
	FileConversionStatusQueued FileConversionStatus = "Queued"
	// FileConversionStatusUploaded represents the FileConversionStatus `"Uploaded"`.
	FileConversionStatusUploaded FileConversionStatus = "Uploaded"
	// FileConversionStatusInProgress represents the FileConversionStatus `"In Progress"`.
	FileConversionStatusInProgress FileConversionStatus = "In Progress"
	// FileConversionStatusCompleted represents the FileConversionStatus `"Completed"`.
	FileConversionStatusCompleted FileConversionStatus = "Completed"
	// FileConversionStatusFailed represents the FileConversionStatus `"Failed"`.
	FileConversionStatusFailed FileConversionStatus = "Failed"
)

// InstanceMetadata is the type definition for a InstanceMetadata.
type InstanceMetadata struct {
	// CPUPlatform is the CPU platform of the instance.
	CPUPlatform string `json:"cpu_platform,omitempty" yaml:"cpu_platform,omitempty"`
	// Description is the description of the instance.
	Description string `json:"description,omitempty" yaml:"description,omitempty"`
	// Environment is the type of environment.
	Environment Environment `json:"environment,omitempty" yaml:"environment,omitempty"`
	// GitHash is the git hash of the code the server was built from.
	GitHash string `json:"git_hash,omitempty" yaml:"git_hash,omitempty"`
	// Hostname is the hostname of the instance.
	Hostname string `json:"hostname,omitempty" yaml:"hostname,omitempty"`
	// ID is the id of the instance.
	ID string `json:"id,omitempty" yaml:"id,omitempty"`
	// Image is the image that was used as the base of the instance.
	Image string `json:"image,omitempty" yaml:"image,omitempty"`
	// IPAddress is the IP address of the instance.
	IPAddress string `json:"ip_address,omitempty" yaml:"ip_address,omitempty"`
	// MachineType is the machine type of the instance.
	MachineType string `json:"machine_type,omitempty" yaml:"machine_type,omitempty"`
	// Name is the name of the instance.
	Name string `json:"name,omitempty" yaml:"name,omitempty"`
	// Zone is the zone of the instance.
	Zone string `json:"zone,omitempty" yaml:"zone,omitempty"`
}

// Message is the type definition for a Message.
type Message struct {
	// Message is the message.
	Message string `json:"message,omitempty" yaml:"message,omitempty"`
}

// ValidOutputFileType is the type definition for a ValidOutputFileType.
type ValidOutputFileType string

const (
	// ValidOutputFileTypeObj represents the ValidOutputFileType `"obj"`.
	ValidOutputFileTypeObj ValidOutputFileType = "obj"
	// ValidOutputFileTypeStl represents the ValidOutputFileType `"stl"`.
	ValidOutputFileTypeStl ValidOutputFileType = "stl"
	// ValidOutputFileTypeDae represents the ValidOutputFileType `"dae"`.
	ValidOutputFileTypeDae ValidOutputFileType = "dae"
)

// ValidSourceFileType is the type definition for a ValidSourceFileType.
type ValidSourceFileType string

const (
	// ValidSourceFileTypeObj represents the ValidSourceFileType `"obj"`.
	ValidSourceFileTypeObj ValidSourceFileType = "obj"
	// ValidSourceFileTypeStl represents the ValidSourceFileType `"stl"`.
	ValidSourceFileTypeStl ValidSourceFileType = "stl"
	// ValidSourceFileTypeDae represents the ValidSourceFileType `"dae"`.
	ValidSourceFileTypeDae ValidSourceFileType = "dae"
)

// Environments is the collection of all Environment values.
var Environments = []Environment{
	EnvironmentDEVELOPMENT,
	EnvironmentPREVIEW,
	EnvironmentPRODUCTION,
}

// FileConversionStatuses is the collection of all FileConversionStatus values.
var FileConversionStatuses = []FileConversionStatus{
	FileConversionStatusCompleted,
	FileConversionStatusFailed,
	FileConversionStatusInProgress,
	FileConversionStatusQueued,
	FileConversionStatusUploaded,
}

// ValidOutputFileTypes is the collection of all ValidOutputFileType values.
var ValidOutputFileTypes = []ValidOutputFileType{
	ValidOutputFileTypeDae,
	ValidOutputFileTypeObj,
	ValidOutputFileTypeStl,
}

// ValidSourceFileTypes is the collection of all ValidSourceFileType values.
var ValidSourceFileTypes = []ValidSourceFileType{
	ValidSourceFileTypeDae,
	ValidSourceFileTypeObj,
	ValidSourceFileTypeStl,
}
